<?php

//exception codes 6100-6199

class thelist_bairos_command_setdhcpserverstatus implements Thelist_Commander_pattern_interface_idevicecommand
{

	private $_device;
	private $_interface;
	private $_action;
		
	public function __construct($device, $interface, $action)
	{
		//$action
		//both models = string containing: start, stop, reload
		
		//$interface
		//object	= interface_obj
		//string	= interface_name

		$this->_device 		= $device;
		$this->_interface	= $interface;
		$this->_action 		= $action;
	}
	
	public function execute()
	{
		if (is_object($this->_interface)) {
			$interface_name		= $this->_interface->get_if_name();
		} else {
			$interface_name		= $this->_interface;
		}
		
		$dhcp_status				= new Thelist_Bairos_command_getdhcpserverstatus($this->_device, $this->_interface);
		$status						= $dhcp_status->get_dhcp_server_operational_status(true);

		if ($this->_action == 'stop') {
			
			//we are creating a new file on stop so we are only affecting the interface that has been told to stop
			$main_file_path	= "/etc/dhcpd.conf";
			
			$dhcpd_file		= new Thelist_Bairos_command_getfilecontent($this->_device, $main_file_path);
			$content_array	= $dhcpd_file->get_content_array();
			
			$need_escape  	= array('"');
			$replacement	= array('\\"');
			
			if ($content_array != null) {
				
				foreach($content_array as $line) {
					
					//only includes
					if (preg_match("/include/", $line)) {
						//only ones that does not match the interface we are stopping
						if (!preg_match("/\/".$interface_name."\";/", $line)) {
							
							if(!isset($new_dhcpd_file)) {
								$new_dhcpd_file = "\n".str_replace($need_escape, $replacement, $line);
							} else {
								$new_dhcpd_file .= "\n".str_replace($need_escape, $replacement, $line);
							}
							
						} else {
							//if we find the line that should no longer exist, we could remove it, but i have chosen not to yet	
							//does not yet make sense to me that the admin status removes files
						}
					}
				}

				//create the main config file
				$time_obj = new Thelist_Utility_time();
				
				//new dhcp file
				$new_dhcpd_file_content = "\n### DHCP Config Generated by setdhcpserveradminstatus: " . $time_obj->get_current_date_time_as_am_pm() . "\nddns-update-style none;";

				if (isset($new_dhcpd_file)) {
					//append includes
					$new_dhcpd_file_content .= "\n" . $new_dhcpd_file;
					
					//flag so we can restart the server
					$stop_server = 'no';
					
				} else {
					//if there are no interfaces left
					$new_dhcpd_file_content .= "\n###no active interfaces";
					
					//flag so we can kill off the server
					$stop_server = 'yes';
				}
				
				$main_file_path	= "/etc/dhcpd.conf";
				
				$make_main_file	= new Thelist_Bairos_command_setfilecontent($this->_device, $main_file_path, $new_dhcpd_file_content, 'override');
				$make_main_file->execute();
				
				if ($status == 1) {
					$this->_device->execute_command("service dhcpd restart");
					$expected_after_status = 0;
				} elseif ($status == null) {
					//server has active interfaces but is stopped, we need to start it, and maybe alert in the future
					$this->_device->execute_command("service dhcpd start");
					$expected_after_status = 0;
				} elseif ($stop_server == 'yes' && $status != null) {
					$this->_device->execute_command("service dhcpd stop");
					$expected_after_status = null;
				}
			}
			
		} elseif ($this->_action == 'start') {

			if ($status == 1) {
				//do nothing its already running
				$expected_after_status = 1;
			} elseif ($status == 0) {
				//server is running, but this interface is not running
				$this->_device->execute_command("service dhcpd restart");
				$expected_after_status = 1;
			} elseif ($status == null) {
				//server has active interfaces but is stopped, we need to start it, could be this is the first interface to be lit up
				$this->_device->execute_command("service dhcpd start");
				$expected_after_status = 1;
			}
		} elseif ($this->_action == 'reload') {

			if ($status == 1) {
				$this->_device->execute_command("service dhcpd restart");
				$expected_after_status = 1;
			} elseif ($status == 0) {
				//server is running, but this interface is not running
				$this->_device->execute_command("service dhcpd restart");
				$expected_after_status = 1;
			} elseif ($status == null) {
				//server has active interfaces but is stopped, maybe we need to alert in the future
				$this->_device->execute_command("service dhcpd start");
				$expected_after_status = 1;
			}
		} else {
			throw new exception("unknown dhcp admin status action", 6100);
		}

		$verify = $dhcp_status->get_dhcp_server_operational_status(true);

		if ($expected_after_status != $verify) {

			throw new exception("dhcp server operational status on ".$this->_device->get_fqdn()." does not match the expected result after a change. expected: ".$expected_after_status.", status after change: ".$verify." ", 6101);
		}
	}
}